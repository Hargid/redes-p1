#!/usr/bin/env python3
import asyncio
from tcp import Servidor
import re

#Variaveis Globais
dadosResiduais = b''

def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None


def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()


def dados_recebidos(conexao, dados):
    global dadosResiduais
    
    dados = dadosResiduais + dados
    
    if dados == b'':
        return sair(conexao)
    
    comandos = dados.split(b'\n') # Lista de Comandos detectados (separados por \n)
    
    if dados.endswith(b'\n') # Limpa o Buffer de dados residuais
        dadosResiduais = b''
    else #Dados Residuais guarda o último comando não completo
        dadosResiduais = comandos[len(comandos)-1]
    
    for i in range(len(comandos)-1): # Varre cada comando recebido, excluindo o último (não completo - cuja parte recebida foi armazenada em "dadosResiduais"
        if comandos.startswith(b'PING'): #PING
            conexao.enviar(b':server PONG server :' + comandos[i].split(b' ', 1)[1] + b'\n')
        

    
        
    print(conexao, dados)


def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.registrar_recebedor(dados_recebidos)


servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()